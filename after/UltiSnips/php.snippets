snippet if "<?php if (___) ?> ___ <?php endif ?>"
<?`!v exists('g:UltiSnipsOpenTag') ? g:UltiSnipsOpenTag : 'php'` if (${1:condition}): ?>
	$0
<?`!v exists('g:UltiSnipsOpenTag') ? g:UltiSnipsOpenTag : 'php'` endif ?>
endsnippet

snippet def? "defined( )"
$1defined('$2')$0
endsnippet

snippet $_ "$_SERVER['']"
\$_SERVER['${1:variable}']
endsnippet

snippet $_ "$_FILES['']"
\$_FILES['${1:variable}']
endsnippet

snippet con "Constructor"
function __construct(${1:\$${2:foo}${3: = ${4:null}}}) {
	${2/.+/$this->$0 = \$$0;/}$0
}
endsnippet

snippet $_ "$_GET['']"
\$_GET['${1:variable}']
endsnippet

snippet req "require( )"
require '${1:file}';$0
endsnippet

snippet <<< "Heredoc"
<<<${1:HTML}
${2:content here}
$1;

endsnippet

snippet ret "return $retVal;"
return$1;$0
endsnippet

snippet doc_v "PHPDoc class var"
/**
 * ${3:undocumented class variable}
 *
 * @var ${4:string}
 **/
${1:var} \$$2;$0
endsnippet

snippet globals "$GLOBALS['']"
\$GLOBALS['${1:variable}']${2: = }${3:something}${4:;}$0
endsnippet

snippet doc_i "PHPDoc interface"
/**
 * ${2:undocumented class}
 *
 * @package ${3:default}
 * @author `!v exists('g:snips_author') ? g:snips_author : '$TM_FULLNAME'`
 **/
interface $1
{$0
} // END interface $1
endsnippet

snippet $_ "$_ENV['']"
\$_ENV['${1:variable}']
endsnippet

snippet echo "echo ___"
echo "${1:string}"${0};
endsnippet

snippet class "class { }"
/**
* $1
*/
class ${2:ClassName}${3: extends ${4:AnotherClass}}
{
	$5
	function ${6:__construct}(${7:argument})
	{
		${0:# code...}
	}
}

endsnippet

snippet else "else {}"
else {
	${0:# code...}
}
endsnippet

snippet incl "include( )"
include '${1:file}';$0
endsnippet

snippet /** "Start Docblock"
/**
 * $0
 */
endsnippet

snippet case "switch( ) case:"
case '${1:variable}':
	${0:# code...}
	break;
endsnippet

snippet def "define( )"
define('$1', ${2:'$3'});
$0
endsnippet

snippet echo "<?php echo ___ ?>"
<?`!v exists('g:UltiSnipsOpenTagWithEcho') ? g:UltiSnipsOpenTagWithEcho : 'php echo'` ${1:\$var} ?>$0
endsnippet

snippet foreach "foreach( )"
foreach (\$${1:variable} as \$${2:key}${3: => \$${4:value}}) {
	${0:# code...}
}
endsnippet

snippet elseif "elseif( )"
elseif (${1:condition}) {
	${0:# code...}
}
endsnippet

snippet array "new array( )"
\$${1:arrayName} = array('$2' => $3${4:,} $0);
endsnippet

snippet if? "if ?: a : b;"
\$${1:retVal} = (${2:condition}) ? ${3:a} : ${4:b} ;
endsnippet

snippet doc_c "PHPDoc class"
/**
 * ${3:undocumented class}
 *
 * @package ${4:default}
 * @author `!v exists('g:snips_author') ? g:snips_author : '$TM_FULLNAME'`
 **/
$1class $2
{$0
} // END $1class $2
endsnippet

snippet doc_s "PHPDoc function signature"
/**
 * ${4:undocumented function}
 *
 * @return ${5:void}
 * @author `!v exists('g:snips_author') ? g:snips_author : '$TM_FULLNAME'`$6
 **/
$1function $2($3);$0
endsnippet

snippet foreach "<?php foreach (___) ___ <?php endforeach ?>"
<?`!v exists('g:UltiSnipsOpenTag') ? g:UltiSnipsOpenTag : 'php'` foreach (\$${1:variable} as \$${2:key}${3: => \$${4:value}}): ?>
	${0}
<?`!v exists('g:UltiSnipsOpenTag') ? g:UltiSnipsOpenTag : 'php'` endforeach ?>
endsnippet

snippet $_ "$_POST['']"
\$_POST['${1:variable}']
endsnippet

snippet this "<?php $this->… ?>"
<?`!v exists('g:UltiSnipsOpenTag') ? g:UltiSnipsOpenTag : 'php'` \$this->$0 ?>
endsnippet

snippet req1 "require_once( )"
require_once '${1:file}';$0
endsnippet

snippet ifelse "if( ) else( )"
if (${1:condition}) {
	${2:# code...}
} else {
	${3:# code...}
}
$0
endsnippet

snippet echoh "<?php echo htmlentities(___) ?>"
<?`!v exists('g:UltiSnipsOpenTagWithEcho') ? g:UltiSnipsOpenTagWithEcho : 'php echo'` htmlentities(${1:\$var}, ENT_QUOTES, 'utf-8') ?>$0
endsnippet

snippet php
<?`!v exists('g:UltiSnipsOpenTag') ? g:UltiSnipsOpenTag : 'php'` $0 ?>
endsnippet

snippet phpf
<?`!v exists('g:UltiSnipsOpenTag') ? g:UltiSnipsOpenTag : 'php'`
$0
?>
endsnippet

snippet for "for( )"
for (\$${1:i}=${2:0}; \$${1:i} < $3; \$${1:i}++) { 
	${0:# code...}
}
endsnippet

snippet doc_f "PHPDoc function"
/**
 * ${4:undocumented function}
 *
 * @return ${5:void}
 * @author `!v exists('g:snips_author') ? g:snips_author : '$TM_FULLNAME'`$6
 **/
$1function $2($3)
{$0
}
endsnippet

snippet ret0 "return FALSE;"
return false;$0
endsnippet

snippet ifelse "<?php if (___) ?> ___ <?php else ?> ___ <?php endif ?>"
<?`!v exists('g:UltiSnipsOpenTag') ? g:UltiSnipsOpenTag : 'php'` if (${1:condition}): ?>
	$2
<?`!v exists('g:UltiSnipsOpenTag') ? g:UltiSnipsOpenTag : 'php'` else: ?>
	$0
<?`!v exists('g:UltiSnipsOpenTag') ? g:UltiSnipsOpenTag : 'php'` endif ?>
endsnippet

snippet doc_h "PHPDoc header"
/**
 * $1
 *
 * @author `!v exists('g:snips_author') ? g:snips_author : '$TM_FULLNAME'`
 * @version \$Id\$
 * @copyright `echo $TM_ORGANIZATION_NAME`, `date +"%e %B, %Y" | sed 's/^ //'`
 * @package ${3:default}
 **/

/**
 * Define DocBlock
 **/

endsnippet

snippet $_ "$_REQUEST['']"
\$_REQUEST['${1:variable}']
endsnippet

snippet if "if( )"
if (${1:condition}) {
	${0:# code...}
}
endsnippet

snippet switch "switch( )"
switch (${1:variable}) {
	case '${2:value}':
		${3:# code...}
		break;
	$0
	default:
		${4:# code...}
		break;
}
endsnippet

snippet else "<?php else: ?>"
<?`!v exists('g:UltiSnipsOpenTag') ? g:UltiSnipsOpenTag : 'php'` else: ?>
endsnippet

snippet do "do while( )"
do {
	${0:# code...}
} while (${1:$a <= 10});
endsnippet

snippet while "while( )"
while (${1:$a <= 10}) {
	${0:# code...}
}
endsnippet

snippet phperr "PHP Error Catching"
`cat "$TM_BUNDLE_SUPPORT/textmate_error_handler.html" | grep -E -v '^[ \t\s]*\/\/' | sed 's/\(.*\)[ \t]*--.*/\1/' | tr -s ' \n\t' ' ' | sed 's/.\{80\}[{};]/&\
/g'`
endsnippet

snippet ret1 "return TRUE;"
return true;$0
endsnippet

snippet ethis "<?php echo $this->… ?>"
<?`!v exists('g:UltiSnipsOpenTagWithEcho') ? g:UltiSnipsOpenTagWithEcho : 'php echo'` \$this->$0 ?>
endsnippet

snippet fun "function xx( )"
${1:public }function ${2:FunctionName}(${3:\$${4:value}${5:=''}})
{
	${0:# code...}
}
endsnippet

snippet $_ "$_SESSION['']"
\$_SESSION['${1:variable}']
endsnippet

snippet doc_d "PHPDoc constant definition"
/**
 * ${3:undocumented constant}
 **/
define($1, $2);$0
endsnippet

snippet incl1 "include_once( )"
include_once '${1:file}';$0
endsnippet

snippet throw "throw"
throw new $1Exception(${2:"${3:Error Processing Request}"}${4:, ${5:1}});
$0
endsnippet

snippet $_ "$_COOKIE['']"
\$_COOKIE['${1:variable}']
endsnippet

